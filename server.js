// –ò–º–ø–æ—Ä—Ç—ã
const express = require('express');
const cors = require('cors');
const axios = require('axios');
const XLSX = require('xlsx');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = express();

// –ü–æ—Ä—Ç
const PORT = process.env.PORT || 10000;

// –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
const UPLOAD_DIR = path.join(__dirname, 'uploads');
const CURRENT_SCHEDULE_PATH = path.join(UPLOAD_DIR, 'current-schedule.xlsx');

if (!fs.existsSync(UPLOAD_DIR)) {
  fs.mkdirSync(UPLOAD_DIR, { recursive: true });
}

// Middleware
app.use(cors());
app.use(express.json());

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–µ—à
let cachedSchedule = null;
let lastUpdated = null;

// =============== –≠–ù–î–ü–û–ò–ù–¢–´ ===============

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.send(`
    <h1>üìö –°–µ—Ä–≤–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –†–ì–ê–¢–£</h1>
    <p><a href="/api/schedule">GET /api/schedule</a> ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</p>
    <p><a href="/schedule-ui">GET /schedule-ui</a> ‚Äî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ UI</p>
    <p><a href="/api/upload-schedule">POST /api/upload-schedule</a> ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å Excel-—Ñ–∞–π–ª</p>
    <p><a href="/load-schedule">/load-schedule</a> ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ</p>
    <p>–ö–µ—à: ${cachedSchedule ? '–≤–∫–ª—é—á—ë–Ω' : '–æ–∂–∏–¥–∞–µ—Ç'}</p>
    <p>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdated || '–Ω–∏–∫–æ–≥–¥–∞'}</p>
  `);
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ
app.get('/load-schedule', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</title>
        <style>
            body { font-family: Arial, sans-serif; padding: 40px; background: #f5f5f5; }
            .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
            h1 { color: #2c3e50; }
            input[type="url"] { width: 100%; padding: 10px; margin: 10px 0; border: 1px solid #ccc; border-radius: 5px; }
            button { padding: 10px 20px; background: #3498db; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; }
            button:hover { background: #2980b9; }
            .message { margin-top: 20px; padding: 10px; border-radius: 5px; }
            .success { background: #d4edda; color: #155724; }
            .error { background: #f8d7da; color: #721c24; }
            .accordion {
                background: #eee;
                padding: 15px;
                border-radius: 5px;
                cursor: pointer;
                margin-top: 30px;
                font-weight: bold;
            }
            .iframe-container {
                display: none;
                margin-top: 20px;
                border: 1px solid #ddd;
                border-radius: 5px;
                overflow: hidden;
            }
            .iframe-container iframe {
                width: 100%;
                height: 600px;
                border: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ</h1>
            <form id="scheduleForm">
                <label for="url">–°—Å—ã–ª–∫–∞ –Ω–∞ Excel-—Ñ–∞–π–ª (.xlsx):</label><br>
                <input type="url" id="url" name="url" placeholder="https://example.com/raspisanie.xlsx" required><br>
                <button type="submit">–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</button>
            </form>
            <div id="result"></div>

            <div class="accordion" id="accordion">üîΩ –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</div>
            <div class="iframe-container" id="iframeContainer">
                <iframe src="https://www.rsatu.ru/students/raspisanie-zanyatiy/"></iframe>
            </div>
        </div>

        <script>
            document.getElementById('scheduleForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const url = document.getElementById('url').value;
                const resultDiv = document.getElementById('result');
                resultDiv.innerHTML = '<p>‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</p>';
                resultDiv.className = '';

                try {
                    const response = await fetch('/api/load-schedule-url', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ url })
                    });

                    const data = await response.json();
                    if (data.success) {
                        resultDiv.innerHTML = '<p class="message success">‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!</p>';
                    } else {
                        resultDiv.innerHTML = '<p class="message error">‚ùå –û—à–∏–±–∫–∞: ' + data.error + '</p>';
                    }
                } catch (err) {
                    resultDiv.innerHTML = '<p class="message error">‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + err.message + '</p>';
                }
            });

            // –ê–∫–∫–æ—Ä–¥–µ–æ–Ω
            const accordion = document.getElementById('accordion');
            const iframeContainer = document.getElementById('iframeContainer');
            accordion.addEventListener('click', () => {
                if (iframeContainer.style.display === 'block') {
                    iframeContainer.style.display = 'none';
                    accordion.textContent = 'üîΩ –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è';
                } else {
                    iframeContainer.style.display = 'block';
                    accordion.textContent = 'üîº –°–∫—Ä—ã—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É';
                }
            });
        </script>
    </body>
    </html>
  `);
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ URL
app.post('/api/load-schedule-url', async (req, res) => {
  const { url } = req.body;

  if (!url || typeof url !== 'string') {
    return res.status(400).json({ success: false, error: '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–µ "url"' });
  }

  try {
    console.log(`üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å: ${url}`);

    const response = await axios.get(url, {
      responseType: 'arraybuffer',
      timeout: 60000,
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0 Safari/537.36'
      }
    });

    if (response.status !== 200) {
      throw new Error(`HTTP ${response.status}: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª`);
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    await fs.promises.writeFile(CURRENT_SCHEDULE_PATH, response.data);
    cachedSchedule = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–µ—à
    lastUpdated = null;

    console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω');

    res.json({
      success: true,
      message: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ',
      size: response.data.length
    });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ —Å—Å—ã–ª–∫–µ:', err.message);
    res.status(500).json({ success: false, error: err.message });
  }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ multipart/form-data
app.post('/api/upload-schedule', async (req, res) => {
  try {
    if (!req.headers['content-type']?.includes('multipart/form-data')) {
      return res.status(400).json({ error: '–û–∂–∏–¥–∞–µ—Ç—Å—è multipart/form-data' });
    }

    const boundary = req.headers['content-type'].split('boundary=')[1];
    if (!boundary) {
      return res.status(400).json({ error: '–ù–µ –Ω–∞–π–¥–µ–Ω boundary' });
    }

    const chunks = [];
    for await (const chunk of req) {
      chunks.push(chunk);
    }

    const body = Buffer.concat(chunks);
    const parts = body.split(Buffer.from(`--${boundary}`));

    let fileBuffer = null;
    let filename = '';

    for (const part of parts) {
      if (part.includes('filename="')) {
        const headerEnd = part.indexOf('\r\n\r\n');
        if (headerEnd === -1) continue;

        const headers = part.slice(0, headerEnd).toString();
        const content = part.slice(headerEnd + 4); // \r\n\r\n
        const cleanContent = content.slice(0, -2); // –£–±–∏—Ä–∞–µ–º \r\n –≤ –∫–æ–Ω—Ü–µ

        const filenameMatch = headers.match(/filename="(.+?)"/);
        filename = filenameMatch ? filenameMatch[1] : 'schedule.xlsx';
        fileBuffer = cleanContent;
        break;
      }
    }

    if (!fileBuffer) {
      return res.status(400).json({ error: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ' });
    }

    await fs.promises.writeFile(CURRENT_SCHEDULE_PATH, fileBuffer);
    cachedSchedule = null; // –°–±—Ä–æ—Å –∫–µ—à–∞

    res.json({
      success: true,
      message: '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω',
      filename,
      size: fileBuffer.length
    });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err);
    res.status(500).json({ success: false, error: err.message });
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
app.get('/api/schedule', async (req, res) => {
  if (cachedSchedule) {
    return res.json({
      success: true,
      schedule: cachedSchedule,
      lastUpdated,
      fromCache: true
    });
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    await fs.promises.access(CURRENT_SCHEDULE_PATH);
    const buffer = await fs.promises.readFile(CURRENT_SCHEDULE_PATH);
    const workbook = XLSX.read(buffer, { type: 'buffer' });
    const schedule = parseWorkbook(workbook);

    cachedSchedule = schedule;
    lastUpdated = new Date().toISOString();

    res.json({
      success: true,
      schedule,
      lastUpdated,
      fromCache: false
    });
  } catch (err) {
    res.status(500).json({
      success: false,
      error: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ /load-schedule –∏–ª–∏ /api/upload-schedule'
    });
  }
});

// =============== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===============

function findLast(data, col, from) {
  for (let i = from - 1; i >= 0; i--) {
    if (data[i]?.[col]) return data[i][col].toString().trim();
  }
  return "";
}

// ‚úÖ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–ê–†–°–ò–ù–ì–ê ‚Äî –ë–ï–†–Å–ú –ì–†–£–ü–ü–£ –ò–ó –ó–ê–ì–û–õ–û–í–ö–ê –°–¢–û–õ–ë–¶–ê
function parseWorkbook(workbook) {
  const sheet = workbook.Sheets[workbook.SheetNames[0]];
  const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1, defval: "" });

  if (jsonData.length < 2) {
    return [];
  }

  // ‚úÖ –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≥—Ä—É–ø–ø
  const headers = jsonData[0] || [];
  const result = [];

  // –ù–∞—á–∏–Ω–∞–µ–º —Å 2-–π —Å—Ç—Ä–æ–∫–∏ (–∏–Ω–¥–µ–∫—Å 1), —Ç.–∫. 0 ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏
  for (let rowIdx = 1; rowIdx < jsonData.length; rowIdx++) {
    const row = jsonData[rowIdx] || [];
    const week = (row[0] ? String(row[0]).trim() : "") || findLast(jsonData, 0, rowIdx);
    const day = (row[1] ? String(row[1]).trim() : "") || findLast(jsonData, 1, rowIdx);
    const number = (row[2] ? String(row[2]).trim() : "") || findLast(jsonData, 2, rowIdx);

    // ‚úÖ –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º, –Ω–∞—á–∏–Ω–∞—è —Å 3-–≥–æ (–∏–Ω–¥–µ–∫—Å 3)
    for (let colIdx = 3; colIdx < row.length; colIdx++) {
      const subject = row[colIdx] ? String(row[colIdx]).trim() : "";
      if (subject && subject.length > 1 && !subject.includes("undefined")) {
        // ‚úÖ –ë–µ—Ä—ë–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ –ó–ê–ì–û–õ–û–í–ö–ê —Å—Ç–æ–ª–±—Ü–∞, –∞ –Ω–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
        const group = headers[colIdx] ? String(headers[colIdx]).trim() : "unknown";
        result.push({
          week,
          day,
          number,
          subject,
          group // ‚úÖ –ì—Ä—É–ø–ø–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞!
        });
      }
    }
  }

  return result;
}

// üñ•Ô∏è –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—É—é HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
app.get('/schedule-ui', (req, res) => {
  const html = `
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –†–ì–ê–¢–£</title>
  <!-- Tailwind CSS —á–µ—Ä–µ–∑ CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body { font-family: system-ui, -apple-system, sans-serif; }
  </style>
</head>
<body class="flex flex-col min-h-screen bg-gray-50 text-gray-800">
  <div class="max-w-5xl w-full mx-auto flex flex-col flex-grow">

    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
    <div class="text-center mb-8 mt-8">
      <h1 class="text-3xl font-semibold text-gray-900">üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –†–ì–ê–¢–£</h1>
    </div>

    <!-- –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ -->
    <div class="bg-white rounded-2xl shadow-lg border border-gray-200 p-6 mb-8">
      <form id="searchForm" class="flex flex-col sm:flex-row gap-3">
        <input
          type="text"
          id="groupInput"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–ü–ë-24-1)"
          class="flex-grow px-5 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-blue-400 text-gray-700 placeholder-gray-400 text-sm"
        />
        <button
          type="submit"
          id="submitButton"
          class="px-6 py-3 bg-black hover:bg-gray-800 disabled:bg-gray-400 text-white font-medium rounded-xl transition-all duration-200 transform hover:scale-102 shadow-sm"
        >
          –ó–∞–≥—Ä—É–∑–∫–∞...
        </button>
      </form>
      <p id="errorMessage" class="text-red-500 text-sm mt-3 text-center hidden"></p>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ -->
    <div id="resultsContainer" class="hidden">
      <div class="bg-white rounded-2xl shadow overflow-hidden border border-gray-200 mb-8">
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50 text-gray-600 text-sm uppercase tracking-wide">
              <tr>
                <th class="px-6 py-4 text-center font-semibold">–ù–µ–¥–µ–ª—è</th>
                <th class="px-6 py-4 font-semibold">–î–µ–Ω—å</th>
                <th class="px-6 py-4 text-center font-semibold">–ü–ê–†–ê</th>
                <th class="px-6 py-4 font-semibold">–ü—Ä–µ–¥–º–µ—Ç</th>
              </tr>
            </thead>
            <tbody id="scheduleTableBody" class="divide-y divide-gray-100"></tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- –°–æ–æ–±—â–µ–Ω–∏–µ "–Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -->
    <div id="emptyMessage" class="text-center text-gray-500 italic mb-8 hidden">
      –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞...
    </div>

    <!-- ‚¨áÔ∏è –§—É—Ç–µ—Ä ‚Äî –ø—Ä–∏–∂–∞—Ç –∫ –Ω–∏–∑—É –∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É -->
    <footer class="mt-auto text-center text-gray-400 text-xs py-4">
      ¬© <span id="currentYear"></span> –†–ì–ê–¢–£
    </footer>
  </div>

  <script>
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ
    document.getElementById('currentYear').textContent = new Date().getFullYear();

    // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    const form = document.getElementById('searchForm');
    const groupInput = document.getElementById('groupInput');
    const submitButton = document.getElementById('submitButton');
    const errorMessage = document.getElementById('errorMessage');
    const resultsContainer = document.getElementById('resultsContainer');
    const scheduleTableBody = document.getElementById('scheduleTableBody');
    const emptyMessage = document.getElementById('emptyMessage');

    let allData = null;

    // üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('DOMContentLoaded', async () => {
      try {
        const response = await fetch('/api/schedule'); // ‚Üê –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å!
        const json = await response.json();

        if (!json.success) throw new Error(json.error);

        allData = json.schedule;
        submitButton.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å';
        submitButton.disabled = false;
      } catch (err) {
        showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞');
        submitButton.textContent = '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å';
        submitButton.disabled = false;
      }
    });

    // üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const trimmedGroup = groupInput.value.trim();

      if (!trimmedGroup) return;

      hideError();
      scheduleTableBody.innerHTML = '';
      resultsContainer.classList.add('hidden');
      emptyMessage.classList.add('hidden');

      if (!allData) {
        showError('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
        return;
      }

      // ‚úÖ –§–∏–ª—å—Ç—Ä—É–µ–º –¢–û–õ–¨–ö–û –ø–æ –ø–æ–ª–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –ø–æ–ª—è group
      const filtered = allData.filter(
        (item) => item.group?.trim().toUpperCase() === trimmedGroup.toUpperCase()
      );

      if (filtered.length === 0) {
        showError(\`–ì—Ä—É–ø–ø–∞ "\${trimmedGroup}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏\`);
      } else {
        renderSchedule(filtered);
        resultsContainer.classList.remove('hidden');
      }
    });

    // üñºÔ∏è –†–µ–Ω–¥–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É
    function renderSchedule(schedule) {
      scheduleTableBody.innerHTML = schedule.map((item, index) => {
        const isEvenWeek = item.week?.includes("–ß—ë—Ç–Ω–∞—è");
        const isOddWeek = item.week?.includes("–ù–µ—á—ë—Ç–Ω–∞—è");

        let rowClass = "border-b bg-white hover:bg-gray-50";
        if (isEvenWeek) rowClass = "border-b bg-blue-50 hover:bg-blue-100";
        if (isOddWeek) rowClass = "border-b bg-purple-50 hover:bg-purple-100";

        return \`
          <tr class="\${rowClass}">
            <td class="px-6 py-4 text-center text-gray-700 text-sm font-medium align-middle">\${escapeHtml(item.week || '')}</td>
            <td class="px-6 py-4 text-gray-800 font-medium align-middle">\${escapeHtml(item.day || '')}</td>
            <td class="px-6 py-4 text-center text-black font-semibold align-middle">\${escapeHtml(item.number || '')}</td>
            <td class="px-6 py-4 text-gray-900 align-middle">\${escapeHtml(item.subject || '')}</td>
          </tr>
        \`;
      }).join('');
    }

    // üõ°Ô∏è –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    // ‚ùó –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
    function showError(message) {
      errorMessage.textContent = message;
      errorMessage.classList.remove('hidden');
    }

    // ‚úÖ –°–∫—Ä—ã—Ç—å –æ—à–∏–±–∫—É
    function hideError() {
      errorMessage.classList.add('hidden');
    }
  </script>
</body>
</html>
  `.replace(/`/g, "\\`"); // ‚Üê –≠–¢–û –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï!

  res.setHeader('Content-Type', 'text/html; charset=utf-8');
  res.send(html);
});


// =============== –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ===============

app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});